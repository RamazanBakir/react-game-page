{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Button, Collapse, NavbarBrand, Navbar, NavItem, NavLink, Nav, Container, Row, Col, UncontrolledTooltip } from \"reactstrap\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PageNavBar = () => {\n  _s();\n\n  const [collapseOpen, setCollapseOpen] = React.useState(false);\n  const [collapseOut, setCollapseOut] = React.useState(\"\");\n  const [color, setColor] = React.useState(\"navbar-transparent\");\n  React.useEffect(() => {\n    window.addEventListener(\"scroll\", changeColor);\n    return function cleanup() {\n      window.removeEventListener(\"scroll\", changeColor);\n    };\n  }, []);\n\n  const changeColor = () => {\n    if (document.documentElement.scrollTop > 99 || document.body.scrollTop > 99) {\n      setColor(\"bg-info\");\n    } else if (document.documentElement.scrollTop < 100 || document.body.scrollTop < 100) {\n      setColor(\"navbar-transparent\");\n    }\n  };\n\n  const toggleCollapse = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    setCollapseOpen(!collapseOpen);\n  };\n\n  const onCollapseExisting = () => {\n    setCollapseOut(\"collapsing-out\");\n  };\n\n  const onCollapseExited = () => {\n    setCollapseOut(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Navbar\"\n  }, void 0, false);\n};\n\n_s(PageNavBar, \"oc7ks1jGDcD0/9aGXG7vxh/3Hgw=\");\n\n_c = PageNavBar;\nexport default PageNavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageNavBar\");","map":{"version":3,"sources":["C:/Users/adeye/Desktop/react-game-page/kidgame/src/component/PageNavbar.js"],"names":["React","Link","Button","Collapse","NavbarBrand","Navbar","NavItem","NavLink","Nav","Container","Row","Col","UncontrolledTooltip","PageNavBar","collapseOpen","setCollapseOpen","useState","collapseOut","setCollapseOut","color","setColor","useEffect","window","addEventListener","changeColor","cleanup","removeEventListener","document","documentElement","scrollTop","body","toggleCollapse","classList","toggle","onCollapseExisting","onCollapseExited"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,WAA3B,EAAwCC,MAAxC,EAAgDC,OAAhD,EAAyDC,OAAzD,EAAkEC,GAAlE,EAAuEC,SAAvE,EAAkFC,GAAlF,EAAuFC,GAAvF,EAA4FC,mBAA5F,QAAuH,YAAvH;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCf,KAAK,CAACgB,QAAN,CAAe,KAAf,CAAxC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgClB,KAAK,CAACgB,QAAN,CAAe,EAAf,CAAtC;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBpB,KAAK,CAACgB,QAAN,CAAe,oBAAf,CAA1B;AAEAhB,EAAAA,KAAK,CAACqB,SAAN,CAAgB,MAAM;AAClBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCC,WAAlC;AACA,WAAO,SAASC,OAAT,GAAmB;AACtBH,MAAAA,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCF,WAArC;AACH,KAFD;AAGH,GALD,EAKE,EALF;;AAOA,QAAMA,WAAW,GAAG,MAAM;AACtB,QAAIG,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,GAAqC,EAArC,IAA2CF,QAAQ,CAACG,IAAT,CAAcD,SAAd,GAA0B,EAAzE,EAA6E;AACzET,MAAAA,QAAQ,CAAC,SAAD,CAAR;AACH,KAFD,MAGK,IAAIO,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,GAAqC,GAArC,IAA4CF,QAAQ,CAACG,IAAT,CAAcD,SAAd,GAA0B,GAA1E,EAA+E;AAChFT,MAAAA,QAAQ,CAAC,oBAAD,CAAR;AACH;AACJ,GAPD;;AASA,QAAMW,cAAc,GAAG,MAAM;AACzBJ,IAAAA,QAAQ,CAACC,eAAT,CAAyBI,SAAzB,CAAmCC,MAAnC,CAA0C,UAA1C;AACAlB,IAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACH,GAHD;;AAIA,QAAMoB,kBAAkB,GAAG,MAAM;AAC7BhB,IAAAA,cAAc,CAAC,gBAAD,CAAd;AACH,GAFD;;AAGA,QAAMiB,gBAAgB,GAAG,MAAM;AAC3BjB,IAAAA,cAAc,CAAC,EAAD,CAAd;AACH,GAFD;;AAGA,sBACI;AAAA;AAAA,mBADJ;AAKH,CApCD;;GAAML,U;;KAAAA,U;AAsCN,eAAeA,UAAf","sourcesContent":["import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Collapse, NavbarBrand, Navbar, NavItem, NavLink, Nav, Container, Row, Col, UncontrolledTooltip } from \"reactstrap\";\r\n\r\nconst PageNavBar = () => {\r\n    const [collapseOpen, setCollapseOpen] = React.useState(false);\r\n    const [collapseOut, setCollapseOut] = React.useState(\"\");\r\n    const [color, setColor] = React.useState(\"navbar-transparent\");\r\n\r\n    React.useEffect(() => {\r\n        window.addEventListener(\"scroll\", changeColor);\r\n        return function cleanup() {\r\n            window.removeEventListener(\"scroll\", changeColor);\r\n        };\r\n    },[]);\r\n\r\n    const changeColor = () => {\r\n        if( document.documentElement.scrollTop > 99 || document.body.scrollTop > 99) {\r\n            setColor(\"bg-info\");\r\n        }\r\n        else if (document.documentElement.scrollTop < 100 || document.body.scrollTop < 100) {\r\n            setColor(\"navbar-transparent\");\r\n        }\r\n    };\r\n\r\n    const toggleCollapse = () => {\r\n        document.documentElement.classList.toggle(\"nav-open\");\r\n        setCollapseOpen(!collapseOpen);\r\n    };\r\n    const onCollapseExisting = () => {\r\n        setCollapseOut(\"collapsing-out\");\r\n    };\r\n    const onCollapseExited = () => {\r\n        setCollapseOut(\"\");\r\n    };\r\n    return (\r\n        <>\r\n            Navbar\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PageNavBar;"]},"metadata":{},"sourceType":"module"}