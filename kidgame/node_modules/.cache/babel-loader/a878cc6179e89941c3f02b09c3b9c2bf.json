{"ast":null,"code":"import axios from 'axios';\nconst URL_SERVER = \"http://localhost:3004\";\nexport const getGames = async (prevState, page = 1, order = \"asc\", limit = \"10\") => {\n  try {\n    // NOTE: the link below is to direct me on how to sort, and set the limit of games that can be on the homepage.\n    // http://localhost:3004/games?/_page=1&_limit=6&_order=desc&_sort=id\n    const response = await axios.get(`${URL_SERVER}/games?_page=${page}&_limit=${limit}&_order=${order}&_sort=id`);\n    return {\n      games: prevState.games ? [...prevState.games, ...response.data] : response.data,\n      page: page,\n      end: response.data.length === 0 ? true : false\n    };\n  } catch (error) {\n    throw error;\n  }\n};\nexport const addNewsletter = async data => {\n  try {\n    const findUser = await axios.get(`${URL_SERVER}/newsletter?email=${data.email}`);\n\n    if (!Array.isArray(findUser.data) || !findUser.data.length) {\n      // user will be added\n      const response = await axios({\n        method: 'POST',\n        url: `${URL_SERVER}/newsletter`,\n        data: {\n          email: data.email\n        }\n      });\n      return {\n        newsletter: 'added',\n        email: response.data\n      };\n    } else {\n      // user already in the database\n      return {\n        newsletter: 'failed'\n      };\n    }\n  } catch (error) {\n    throw error;\n  }\n};\nexport const getGameById = async () => {\n  try {\n    const response = await axios.get;\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"sources":["C:/Users/adeye/Desktop/react-game-page/kidgame/src/api/index.js"],"names":["axios","URL_SERVER","getGames","prevState","page","order","limit","response","get","games","data","end","length","error","addNewsletter","findUser","email","Array","isArray","method","url","newsletter","getGameById"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,UAAU,GAAG,uBAAnB;AAEA,OAAO,MAAMC,QAAQ,GAAG,OAAMC,SAAN,EAAgBC,IAAI,GAAC,CAArB,EAAuBC,KAAK,GAAC,KAA7B,EAAmCC,KAAK,GAAC,IAAzC,KAAkD;AACtE,MAAI;AACA;AACA;AACA,UAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAW,GAAEP,UAAW,gBAAeG,IAAK,WAAUE,KAAM,WAAUD,KAAM,WAA5E,CAAvB;AACA,WAAO;AACHI,MAAAA,KAAK,EAAEN,SAAS,CAACM,KAAV,GAAkB,CAAC,GAAGN,SAAS,CAACM,KAAd,EAAoB,GAAGF,QAAQ,CAACG,IAAhC,CAAlB,GAA0DH,QAAQ,CAACG,IADvE;AAEHN,MAAAA,IAAI,EAAEA,IAFH;AAGHO,MAAAA,GAAG,EAAEJ,QAAQ,CAACG,IAAT,CAAcE,MAAd,KAAyB,CAAzB,GAA6B,IAA7B,GAAoC;AAHtC,KAAP;AAKH,GATD,CASE,OAAMC,KAAN,EAAa;AACX,UAAMA,KAAN;AACH;AACJ,CAbM;AAeP,OAAO,MAAMC,aAAa,GAAG,MAAMJ,IAAN,IAAe;AACxC,MAAI;AACA,UAAMK,QAAQ,GAAG,MAAMf,KAAK,CAACQ,GAAN,CAAW,GAAEP,UAAW,qBAAoBS,IAAI,CAACM,KAAM,EAAvD,CAAvB;;AAEA,QAAG,CAACC,KAAK,CAACC,OAAN,CAAcH,QAAQ,CAACL,IAAvB,CAAD,IAAiC,CAACK,QAAQ,CAACL,IAAT,CAAcE,MAAnD,EAA2D;AACvD;AACA,YAAML,QAAQ,GAAG,MAAMP,KAAK,CAAC;AACzBmB,QAAAA,MAAM,EAAE,MADiB;AAEzBC,QAAAA,GAAG,EAAG,GAAEnB,UAAW,aAFM;AAGzBS,QAAAA,IAAI,EAAE;AACFM,UAAAA,KAAK,EAAEN,IAAI,CAACM;AADV;AAHmB,OAAD,CAA5B;AAQA,aAAO;AACHK,QAAAA,UAAU,EAAE,OADT;AAEHL,QAAAA,KAAK,EAAET,QAAQ,CAACG;AAFb,OAAP;AAIH,KAdD,MAeK;AACD;AACA,aAAO;AACHW,QAAAA,UAAU,EAAE;AADT,OAAP;AAGH;AACJ,GAxBD,CAwBE,OAAMR,KAAN,EAAa;AACX,UAAMA,KAAN;AACH;AACJ,CA5BM;AA8BP,OAAO,MAAMS,WAAW,GAAG,YAAW;AAClC,MAAI;AACA,UAAMf,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAA7B;AAEH,GAHD,CAGE,OAAMK,KAAN,EAAY;AACV,UAAMA,KAAN;AACH;AACJ,CAPM","sourcesContent":["import axios from 'axios';\r\n\r\nconst URL_SERVER = \"http://localhost:3004\";\r\n\r\nexport const getGames = async(prevState,page=1,order=\"asc\",limit=\"10\") => {\r\n    try {\r\n        // NOTE: the link below is to direct me on how to sort, and set the limit of games that can be on the homepage.\r\n        // http://localhost:3004/games?/_page=1&_limit=6&_order=desc&_sort=id\r\n        const response = await axios.get(`${URL_SERVER}/games?_page=${page}&_limit=${limit}&_order=${order}&_sort=id`);\r\n        return {\r\n            games: prevState.games ? [...prevState.games,...response.data] : response.data,\r\n            page: page,\r\n            end: response.data.length === 0 ? true : false\r\n        }\r\n    } catch(error) {\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const addNewsletter = async(data) => {\r\n    try {\r\n        const findUser = await axios.get(`${URL_SERVER}/newsletter?email=${data.email}`);\r\n\r\n        if(!Array.isArray(findUser.data) || !findUser.data.length) {\r\n            // user will be added\r\n            const response = await axios({\r\n                method: 'POST',\r\n                url: `${URL_SERVER}/newsletter`,\r\n                data: {\r\n                    email: data.email\r\n                }\r\n            });\r\n\r\n            return {\r\n                newsletter: 'added',\r\n                email: response.data\r\n            }\r\n        }\r\n        else {\r\n            // user already in the database\r\n            return {\r\n                newsletter: 'failed'\r\n            }\r\n        }\r\n    } catch(error) {\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const getGameById = async() => {\r\n    try {\r\n        const response = await axios.get\r\n\r\n    } catch(error){\r\n        throw error;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}